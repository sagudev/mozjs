diff --git a/build/autoconf/android.m4 b/build/autoconf/android.m4
index d4967864d..30eba4ff5 100644
--- a/build/autoconf/android.m4
+++ b/build/autoconf/android.m4
@@ -8,12 +8,14 @@ AC_DEFUN([MOZ_ANDROID_NDK],
 case "$target" in
 *-android*|*-linuxandroid*)
     dnl $android_* will be set for us by Python configure.
-    directory_include_args="-isystem $android_system -isystem $android_sysroot/usr/include"
+    dnl
+    dnl See the mozjs note android-nkd.configure for why these lines are commented out.
+    dnl directory_include_args="-isystem $android_system -isystem $android_sysroot/usr/include"
 
     # clang will do any number of interesting things with host tools unless we tell
     # it to use the NDK tools.
-    extra_opts="--gcc-toolchain=$(dirname $(dirname $TOOLCHAIN_PREFIX))"
-    CPPFLAGS="$extra_opts -D__ANDROID_API__=$android_version $CPPFLAGS"
+    dnl extra_opts="--gcc-toolchain=$(dirname $(dirname $TOOLCHAIN_PREFIX))"
+    dnl CPPFLAGS="$extra_opts -D__ANDROID_API__=$android_version $CPPFLAGS"
     ASFLAGS="$extra_opts $ASFLAGS"
     LDFLAGS="$extra_opts $LDFLAGS"
 
diff --git a/build/moz.configure/android-ndk.configure b/build/moz.configure/android-ndk.configure
index 7448743a4..6c60d9713 100644
--- a/build/moz.configure/android-ndk.configure
+++ b/build/moz.configure/android-ndk.configure
@@ -380,6 +380,20 @@ def extra_toolchain_flags(
 ):
     if not android_sysroot:
         return []
+
+    # Note for mozjs:
+    # Normally Gecko passes all the arguments below to the compiler. The truth
+    # is though that modern NDKs do not need them. They are all handled by the
+    # special NDK-provided compiler wrappers [1]. The mozjs build expects to
+    # use these wrappers and any small mistake in the way the compiler is
+    # invoked will cause any number of subtle build errors. We are simple
+    # people in mozjs land. Let's not even try to get this right and rely on
+    # the NDK to properly invoke the compiler.
+    #
+    # 1. https://android.googlesource.com/platform/ndk/+/master/docs/BuildSystemMaintainers.md#Clang
+    if android_sysroot:
+        return []
+
     flags = [
         "-isystem",
         android_system,
diff --git a/build/moz.configure/toolchain.configure b/build/moz.configure/toolchain.configure
index ec482be95..42873cf6e 100755
--- a/build/moz.configure/toolchain.configure
+++ b/build/moz.configure/toolchain.configure
@@ -1692,11 +1692,13 @@ def linker_ldflags(
                     sysroot.path, multiarch_dir, sysroot.stdcxx_version
                 )
             )
-    if android_platform:
-        flags.append("-L{}/usr/lib".format(android_platform))
-        flags.append("-Wl,--rpath-link={}/usr/lib".format(android_platform))
-        flags.append("--sysroot")
-        flags.append(android_platform)
+    # mozjs: The NDK compiler / linker wrappers take care of properly setting these variables.
+    # See the mozjs note in android-ndk.configure.
+    # if android_platform:
+    #     flags.append("-L{}/usr/lib".format(android_platform))
+    #     flags.append("-Wl,--rpath-link={}/usr/lib".format(android_platform))
+    #     flags.append("--sysroot")
+    #     flags.append(android_platform)
     return flags
 
 
diff --git a/mozglue/misc/ConditionVariable_posix.cpp b/mozglue/misc/ConditionVariable_posix.cpp
index fcc404713..6f6076db7 100644
--- a/mozglue/misc/ConditionVariable_posix.cpp
+++ b/mozglue/misc/ConditionVariable_posix.cpp
@@ -20,10 +20,13 @@ using mozilla::TimeDuration;
 
 static const long NanoSecPerSec = 1000000000;
 
-// Android 32-bit & macOS 10.12 has the clock functions, but not
+// mozjs patch note: This following patched lines come from the upstream version
+// of SpiderMonkey:
+//
+// Android 4.4 or earlier & macOS 10.12 has the clock functions, but not
 // pthread_condattr_setclock.
 #if defined(HAVE_CLOCK_MONOTONIC) && \
-    !(defined(__ANDROID__) && !defined(__LP64__)) && !defined(__APPLE__)
+    !(defined(__ANDROID__) && __ANDROID_API__ < 21) && !defined(__APPLE__)
 #  define CV_USE_CLOCK_API
 #endif
 
