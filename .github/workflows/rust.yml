name: Rust

on: 
  push:
    branches-ignore: "master"
  pull_request:

env:
  CARGO_TERM_COLOR: never
  RUST_BACKTRACE: 1
  SHELL: /bin/bash
  SCCACHE_GHA_ENABLED: "true"
  CARGO_INCREMENTAL: 0

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        d: ["debug-sccache", "sccache", "no"]
    runs-on: windows-latest
    env:
        MOZTOOLS_PATH: 'C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
        AUTOCONF: "C:/mozilla-build/msys/local/bin/autoconf-2.13"
        LINKER: "lld-link.exe"
        CC: "clang-cl"
        CXX: "clang-cl"
        NATIVE_WIN32_PYTHON: "C:\\mozilla-build\\python2\\python.exe"
        PYTHON3: "C:\\mozilla-build\\python3\\python3.exe"
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Install deps
      run: |
        Start-BitsTransfer -Source https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-3.4.exe -Destination ./MozillaBuildSetup.exe
        .\MozillaBuildSetup.exe /S | Out-Null
        echo 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Tools\LLVM\bin' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Run sccache-cache
      if: contains(matrix.d, 'sccache')
      uses: mozilla-actions/sccache-action@v0.0.3
    - name: Build Windows (debug sccache)
      if: contains(matrix.d, 'debug')
      env:
        SCCACHE_ERROR_LOG: "C:/mozilla-build/sccache_log.txt"
        SCCACHE_LOG: "debug"
        RUSTC_WRAPPER: "sccache"
        CCACHE: sccache
      shell: cmd
      run: cargo build -vv
    - name: Build Windows (sccache)
      if: matrix.d == 'sccache'
      env:
        RUSTC_WRAPPER: "sccache"
        CCACHE: sccache
      shell: cmd
      run: cargo build -vv
    - name: Build Windows (no-sccache)
      if: matrix.d == 'no'
      shell: cmd
      run: cargo build -vv
    - uses: actions/upload-artifact@v3
      if: always() && contains(matrix.d, 'debug')
      with:
        name: sccache_log
        path: "C:/mozilla-build/sccache_log.txt"
